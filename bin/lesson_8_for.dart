import 'dart:io';
// import 'dart:js_interop';

void main() {
  // Циклы
  // for (int i = 0; i < 3; i++) { // в 1 создается переменная, кладем 0, во 2 задаем до какого, в 3 увеличивает на 1
  //   print(i);
  // }
  // тут может быть только int, используется в качестве счетчика, и используется переменная i
  // Используется когда с бэка прилетает массив из данных, приходят они как Map и чтобы там постоянно не писать что name тут и тд, в цикле за счет счетчика мы указываем
  // for ключевое слово для запуска цикла

  // List<String> data = ['dasd', 'qwe', 'qwe', '123123', '123'];
  // //    начало     конец        прибавляет на 1
  // for (int i = 0; i < data.length; i++) { // i++ Это тоже самое что и i = i + 1
  //   print(data[i].toUpperCase()); // если бы не указали [i] то он просто выдал бы длину массива
  // }

  // for (int i = 0; i < 10; i++) {
  //   for (int j = 0; j < 6; j++) {
  //     print("Назад");
  //   }
  //   for (int j = 0; j < 6; j++) {
  //     print("вперед");
  //   }
  // } // это чисто для понимания

  //  List<String> data = ['dasd', 'qwe', 'qwe', '123123', '123'];
  //  // data нужна как конец счетчика
  //   for (int i = 0; i < data.length; i++) {
  //   print(data[i]); // i = это как индекс, чтобы к каждому не обращаться
  // }

// Задачи
// №1. Возьмем, например, два списка:
// a = [1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89]
// b = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13] 
// и напишите программу, которая возвращает список, содержащий только общие для них элементы (без дубликатов). Убедитесь, что ваша программа работает с двумя списками разного размера.

  // List a = [1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89];
  // List b = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 89];
  // List result = []; // добавили пустой массив результат
  // for (int i = 0; i < a.length; i++) {
  //   if (b.contains(a[i])) { // если содержит b каждый элемент a
  //     result.add(a[i]); // в результате добавляем каждый индекс массива a
  //   }
  // }
  // print(result.toSet().toList()); // удалили дубликаты и вывели одинаковые без дубликатов

// 2) Допустим, вам дан список, сохраненный в переменной:
// а = [1, 4, 9, 16, 25, 36, 49, 64, 81, 100].
// Напишите код Dart, который берет этот список и создает новый список, в котором есть только четные элементы этого списка.
// Ответ = [4, 16, 36, 64, 100];

  // List a = [1, 4, 9, 16, 25, 36, 49, 64, 81, 100];
  // List result = [];
  // for (int i = 0; i < a.length; i++) {
  //   if (a[i].isEven) {
  //     // isEven тоже проверяет на четность
  //     result.add(a[i]);
  //   }
  //   //  if (a[i] % 2 == 0) { // проверили на четность
  //   //   print(a[i]);
  //   // }
  // }
  // print(result);

  // №3
  // Создайте функцию, которая принимает две строки в качестве аргументов и возвращает, сколько раз первая строка (один символ) была найдена во второй строке.
// Пример:
// вожу "a" и "dart" ➞ результат = 1
// вожу "c" и "Chamber of secrets" ➞ результат = 1
// вожу "b" и "big fat bubble" ➞ результат = 4
  print("Введите первую строку");
  String a = stdin.readLineSync()!;
  print("Введите вторую строку");
  String b = stdin.readLineSync()!;
  int counter = 0;

  for (var i = 0; i < b.length; i++) {
    if (b[i] == a) { // проверили наличие буквы из первой строки во второй
      counter++; // считает сколько раз первая строка содержится во второй и увеличивает на 1 выводя результат
    }
  }
  print(counter);
}
